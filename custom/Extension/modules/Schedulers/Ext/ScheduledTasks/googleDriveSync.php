<?phpif (!defined('sugarEntry') || !sugarEntry)    die('Not A Valid Entry Point');require_once('custom/include/Google/GoogleHelper.php');require_once("include/utils/encryption_utils.php");require_once('custom/modules/Schedulers/license/OutfittersLicense.php');require_once("modules/Administration/Administration.php");$job_strings[] = 'googleDriveSync';function googleDriveSync(){	require('custom/modules/Schedulers/license/config.php');    if (OutfittersLicense::validateModule()) {        $admin = new Administration();        $admin->retrieveSettings();        if (isset($admin->settings[$outfitters_config['shortname'].'_validated_users']) && $admin->settings[$outfitters_config['shortname'].'_validated_users'] == true) {            if (sugar_is_file('custom/include/Google/google-api-php-client/src/Google_Client.php')) { // if php client exist then do drive sync				if(GoogleHelper::check_column_if_exist($GLOBALS['sugar_config']['dbconfig']['db_name'],'users', 'enable_gsync')){					$gh = new GoogleHelper();					//increasing limits					set_time_limit(9000);					$json = getJSONobj();					ini_set('memory_limit', '2048M'); //blacklist while package scan					$sql       = "SELECT 						DISTINCT users.id,users.user_name,users.gmail_id,users.gmail_pass,users.lastsync_drive,rt_gsync.prefrences					FROM users 					LEFT JOIN rt_gsync ON rt_gsync.id=users.id AND rt_gsync.deleted='0'					WHERE 						users.deleted='0' AND 						users.status='Active' AND enable_gsync=1";					$res       = $GLOBALS['db']->query($sql);					$processed = array();					while ($row = $GLOBALS['db']->fetchByAssoc($res)) {						try {							/*user gsync prefrences*/							$prefrences = $json->decode(html_entity_decode(base64_decode($row["prefrences"])));							/*default settings only calendar sync is active*/							if (empty($prefrences)) {								$prefrences = Array(									"schedulers" => Array(										"calendar_google_to_sugar" => true,										"calendar_sugar_to_google" => true,										"contacts_google_to_sugar" => false,										"contacts_sugar_to_google" => true,										"documents_google_to_sugar" => true,										"documents_sugar_to_google" => true									)								);							}							$gh->prefrences = $prefrences;							/*user gsync prefrences*/							if (!empty($row['gmail_id']) && !empty($row['gmail_pass']) && ($gh->prefrences["schedulers"]["documents_google_to_sugar"] === true || $gh->prefrences["schedulers"]["documents_sugar_to_google"] === true)) {								if (in_array(strtolower($row['gmail_id']), $processed)) {									$GLOBALS['log']->fatal("This email (" . $row['gmail_id'] . ") is configured in multiple users settings,skipping....");									continue;								} else {									$processed[] = strtolower($row['gmail_id']);								}								$GLOBALS['log']->fatal('STARTED: Drive sync: ' . $row['user_name'] . '(' . $row['gmail_id'] . ')');								if (empty($row['lastsync_drive']) || !isset($row['lastsync_drive'])) {									$row['lastsync_drive'] = '2013-01-01 01:01:01';								}								$current_date = date($GLOBALS['timedate']->get_db_date_time_format());								$dateAdded    = strtotime(date($GLOBALS['timedate']->get_db_date_time_format(), strtotime($current_date)) . "+03 seconds");								$last_synch   = gmdate($GLOBALS['timedate']->get_db_date_time_format(), $dateAdded);								$gh->performSync($row['gmail_id'], blowfishDecode(blowfishGetKey('encrypt_field'), $row['gmail_pass']), $row['id'], $row['lastsync_drive'], 'drive');								//last sync date saving to db								$sql_update   = "UPDATE users set lastsync_drive='" . $last_synch . "' WHERE id='" . $row['id'] . "'";								$res_update   = $GLOBALS['db']->query($sql_update);								$GLOBALS['log']->fatal('COMPLETED: Drive sync: ' . $row['user_name'] . '(' . $row['gmail_id'] . ')');							}						}						catch (Exception $ex) {							$GLOBALS['log']->fatal('ERROR:' . $ex->getMessage());						}					}					return true;				}else{					$GLOBALS['log']->fatal('Gmail Sync failed in CRON run. do quick repair and rebuild first.');					return false;				}            } else {                $GLOBALS['log']->fatal('Google api php client does not exist');                return false;            }        } else {            $GLOBALS['log']->fatal('Gmail Sync failed in CRON run. You enabled more than allowed users for GSync');            return false;        }    } else {        $GLOBALS['log']->fatal('Gmail Sync failed in CRON run. Unable to validate key.');        return false;    }}